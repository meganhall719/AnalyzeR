usethis::use_package("magick")
usethis::use_package("ggplot2")
usethis::use_package("ggplot2")
usethis::use_package("ggplot2")
usethis::use_package("ggplot2")
usethis::use_package("ggplot2")
devtools::check()
devtools::check_built()
devtools::check()
dir.create("examplee", showWarnings = FALSE)
dir.create("example",showWaarnings = FALSE)
mv "APAP_Novel_Data_Analysis_with_AnalyzeR.qmd" "example/"
file.rename(
from = "APAP_Novel_Data_Analysis_with_AnalyzeR.qmd",
to = "examples/APAP_Novel_Data_Analysis_with_AnalyzeR.qmd"
)
file.rename(
from = "APAP_Novel_Data_Analysis_with_AnalyzeR.qmd",
to = "example/APAP_Novel_Data_Analysis_with_AnalyzeR.qmd"
)
library(AnalyzeR)
library(magick)
library(tiff)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(AnalyzeR)
library(magick)
library(tiff)
library(AnalyzeR)
library(magick) # For loading test images
# In your vignette
library(AnalyzeR)
library(magick)
#  direct URLs to the raw GitHub files
img1 <- image_read("https://raw.githubusercontent.com/kathrynnrhodes/CollaborativeProject/main/F_FXR_3_cerebellum_40x_1.tif")
img2 <- image_read("https://raw.githubusercontent.com/kathrynnrhodes/CollaborativeProject/main/F_FXR_3_cerebellum_40x_2.tif")
img3 <- image_read("https://raw.githubusercontent.com/kathrynnrhodes/CollaborativeProject/main/F_FXR_3_cerebellum_40x_3.tif")
#  proceed with your analysis
analysis_result <- analyze_image(img1, threshold = "60%")
# View the analysis results
print(analysis_result$formatted)
print(paste("Image dimensions:", analysis_result$width, "x", analysis_result$height))
# Display the processed image
analysis_result$processed_image
# Group the cerebellum images
image_list <- list(img1, img2, img3)
grouped_images <- group_loaded_images(image_list, process_loaded_images)
# Display information about the grouped images
print(paste("Number of images in group:", grouped_images$count))
# Print basic info about each image
for (i in 1:length(image_list)) {
info <- magick::image_info(image_list[[i]])
cat(sprintf("Image %d: %d x %d pixels\n", i, info$width, info$height))
}
# Analyze all images with the same threshold
batch_results <- batch_analyze_images(grouped_images, threshold = "65%")
# View the summary results
cat(batch_results$summary)
# You can also access individual results
print(batch_results$individual_results[[1]]$formatted)
print(batch_results$individual_results[[2]]$formatted)
print(batch_results$individual_results[[3]]$formatted)
# Extract percentage values for plotting
percentages <- sapply(batch_results$individual_results, function(x) x$percentage)
image_names <- sapply(batch_results$individual_results, function(x) x$image_name)
# Create a bar plot
barplot(percentages, names.arg = image_names,
main = "Percentage Differences by Image",
xlab = "Image", ylab = "Percentage (%)",
col = "skyblue")
abline(h = batch_results$average_percentage, col = "red", lwd = 2)
legend("topright", legend = c("Individual Images", "Average"),
fill = c("skyblue", "red"))
# Example of customizing thresholds for different image types
light_image_analysis <- analyze_image(img1, threshold = "40%")
dark_image_analysis <- analyze_image(img2, threshold = "80%")
# Compare results
cat("Light image threshold (40%):", light_image_analysis$formatted, "\n")
cat("Dark image threshold (80%):", dark_image_analysis$formatted, "\n")
library(AnalyzeR)
?AnalyzeR
detach("package:AnalyzeR", unload = TRUE)
library(AnalyzeR)
devtools::build()
View(grouped_images)
library(AnalyzeR)
library(magick)
library(tiff)
# Group the cerebellum images
image_list <- list(img1, img2, img3)
grouped_images <- group_loaded_images(image_list, process_loaded_images)
# Display information about the grouped images
print(paste("Number of images in group:", grouped_images$count))
# Print basic info about each image
for (i in 1:length(image_list)) {
info <- magick::image_info(image_list[[i]])
cat(sprintf("Image %d: %d x %d pixels\n", i, info$width, info$height))
}
# Analyze all images with the same threshold
batch_results <- batch_analyze_images(grouped_images, threshold = "65%")
# View the summary results
cat(batch_results$summary)
# You can also access individual results
print(batch_results$individual_results[[1]]$formatted)
print(batch_results$individual_results[[2]]$formatted)
print(batch_results$individual_results[[3]]$formatted)
devtools::check()
library(AnalyzeR)
library(AnalyzeR)
?AnalyzR
?AnalyzeR
devtools::build_vignettes()
devtools::check()
library(AnalyzeR)
?AnalyzeR
